<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>allocator on Iker Galardi</title>
    <link>https://ikergalardi.github.io/tags/allocator/</link>
    <description>Recent content in allocator on Iker Galardi</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 26 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ikergalardi.github.io/tags/allocator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How not to write performant code</title>
      <link>https://ikergalardi.github.io/post/2022-09-26-how-not-to-write-performant-code/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ikergalardi.github.io/post/2022-09-26-how-not-to-write-performant-code/</guid>
      <description>Don&amp;rsquo;t you feel like malloc is really slow? Most probably not, as the malloc implementation shipped on most standard libraries are probably older than me. Still, a fool past of myself thought that I could in 3 moths achieve what glibc achieved in most certainly triple the time. This is the story of how I ended up writing a memory allocator for my end of degree project for university.
For the last 5 moths I have been writting a hybrid memory allocator using the SLAB allocator used on most operating system kernels and what the operating system provides in order to accelerate memory allocations.</description>
    </item>
    
  </channel>
</rss>
